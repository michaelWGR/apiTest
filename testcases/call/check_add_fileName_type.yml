- config:
    name: check add fileName type
    variables:
        user_id: ${yml(user_id)}
    teardown_hooks:
        - ${del_user_msg($user_id)}

#- test:
#    name: get user info by id
#    testcase: testcases/call/get_user_info_by_id.yml
#    output:
#        - token
#        - userName1
#        - userGroup1
#        - teacherGroup1
#        - userId1
#        - userPhoneNumber1

- test:
    name: get token
    testcase: testcases/call/get_token.yml
    output:
      - token

- test:
    name: get user relation info
    api: api/call/callRecord.yml
    variables:
        deviceId: 123
        page: 1
        size: 10
        Authorization: $token
        user_id: ${yml(user_id)}
    teardown_hooks:
        - ${select_user_info($response, $user_id)}
    validate:
        - eq: [content.code, 200]
        - eq: [content.msg, ok]
        - eq: [content.success, true]
        - len_eq: [content.data, 1]
        - eq: [content.data.0.id, $user_id]
    extract:
        - userName1: content.data.0.name
        - userGroup1: content.data.0.group
        - teacherGroup1: content.data.0.teacherGroup
        - userId1: content.data.0.id
        - userPhoneNumber1: content.data.0.phoneNumber

- test:
    name: check fileName
    api: api/call/callRecord_add.yml
    variables:
        Authorization: $token
        deviceId: ${yml(device_id)}
        fileName: test.mp3
        userId: $userId1
        userGroup: $userGroup1
        teacherGroup: $teacherGroup1
        userPhoneNumber: $userPhoneNumber1
        isConnected: 1
        callDuration: 0
        wordRecord: 123456
        tag: test
    validate:
        - eq: [content.code, 200]
        - eq: [content.msg, ok]
        - eq: [content.success, true]
        - type_match: [content.data, dict]
        - type_match: [content.data.recordId, int]
        - len_eq: [content.data.uploadUrl, 5]
        - eq: [content.data.uploadUrl.method, put]
